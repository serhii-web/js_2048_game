{"version":3,"sources":["scripts/main.js"],"names":["button","document","querySelector","messageStart","gameScore","messageWiner","messageLose","tableRow","querySelectorAll","board","createField","gameField","Array","length","i","fill","createRandomNumber","number","x","y","Math","random","floor","addNumbersOnBoard","children","innerText","classList","add","cleareTableRow","forEach","el","child","remove","cleareBoard","moveInRingthDirection","filterBoard","filter","num","newLength","newRow","concat","moveRight","reverseRow","sumSameNumbers","moveLeft","moveDown","expandArray","moveUp","sum","winer","reverse","result","some","includes","checkZerosAndCanMove","findSameNumbers","wasMoving","matrix","clone","checkBoard","originalArr","modifyArr","addEventListener","toggle","matches","tap","res","key"],"mappings":"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","file":"main.9831770e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst gameScore = document.querySelector('.game-score');\nconst messageWiner = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst tableRow = document.querySelectorAll('tr');\n\nconst board = createField();\n\nbutton.addEventListener('click', () => {\n  messageStart.classList.toggle('hidden');\n  messageWiner.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  button.innerText === 'Start'\n    ? button.innerText = 'Restart'\n    : button.innerText = 'Start';\n\n  button.classList.toggle('start', !button.matches('.start'));\n  button.classList.toggle('restart', !button.matches('.restart'));\n\n  if (button.innerText === 'Restart') {\n    createRandomNumber();\n    createRandomNumber();\n\n    addNumbersOnBoard();\n  } else {\n    gameScore.innerText = 0;\n\n    cleareTableRow();\n    cleareBoard();\n  }\n});\n\nfunction createField() {\n  const gameField = new Array(tableRow.length);\n\n  for (let i = 0; i < tableRow.length; i++) {\n    gameField[i] = new Array(tableRow.length).fill(0);\n  }\n\n  return gameField;\n}\n\nfunction createRandomNumber() {\n  const number = [2, 4][+(Math.random() > 0.9)];\n\n  let x, y;\n\n  do {\n    x = Math.floor(Math.random() * tableRow.length);\n    y = Math.floor(Math.random() * tableRow.length);\n  } while (board[x][y] !== 0);\n\n  board[x][y] = number;\n}\n\nfunction addNumbersOnBoard() {\n  for (let i = 0; i < tableRow.length; i++) {\n    for (let x = 0; x < tableRow.length; x++) {\n      if (board[i][x] > 0) {\n        [...tableRow][i].children[x].innerText = board[i][x];\n\n        [...tableRow][i].children[x].classList.add(\n          `field-cell--${board[i][x]}`);\n      }\n    }\n  }\n}\n\nfunction cleareTableRow() {\n  tableRow.forEach(el => [...el.children].forEach(child => {\n    child.classList.remove(`field-cell--${child.innerText}`);\n    child.innerText = '';\n  }));\n}\n\nfunction cleareBoard() {\n  board.forEach(el => el.fill(0));\n}\n\ndocument.addEventListener('keydown', (tap) => {\n  if (checkZerosAndCanMove()) {\n    messageLose.classList.add('hidden');\n  }\n\n  if (button.innerText !== 'Restart' || winer() || checkZerosAndCanMove()) {\n    return;\n  }\n\n  let res = wasMoving(board);\n\n  if (tap.key === 'ArrowRight') {\n    moveRight();\n  }\n\n  if (tap.key === 'ArrowLeft') {\n    moveLeft();\n  }\n\n  if (tap.key === 'ArrowDown') {\n    moveDown();\n  }\n\n  if (tap.key === 'ArrowUp') {\n    moveUp();\n  }\n\n  checkBoard(res, board);\n\n  addNumbersOnBoard();\n  checkZerosAndCanMove();\n\n  res = [];\n});\n\nfunction moveInRingthDirection() {\n  for (let i = 0; i < tableRow.length; i++) {\n    const filterBoard = board[i].filter(num => num);\n\n    const newLength = tableRow.length - filterBoard.length;\n    const zeros = Array(newLength).fill(0);\n\n    const newRow = zeros.concat(filterBoard);\n\n    board[i] = newRow;\n\n    cleareTableRow();\n  }\n}\n\nfunction moveRight() {\n  moveInRingthDirection();\n  reverseRow();\n  sumSameNumbers();\n  reverseRow();\n  moveInRingthDirection();\n};\n\nfunction moveLeft() {\n  moveInRingthDirection();\n  sumSameNumbers();\n  reverseRow();\n  moveInRingthDirection();\n  reverseRow();\n};\n\nfunction moveDown() {\n  expandArray();\n  moveInRingthDirection();\n  reverseRow();\n  sumSameNumbers();\n  moveInRingthDirection();\n  reverseRow();\n  moveInRingthDirection();\n  expandArray();\n}\n\nfunction moveUp() {\n  expandArray();\n  moveInRingthDirection();\n  sumSameNumbers();\n  reverseRow();\n  moveInRingthDirection();\n  reverseRow();\n  expandArray();\n}\n\nfunction sumSameNumbers() {\n  for (let i = 0; i < tableRow.length; i++) {\n    for (let x = 0; x < tableRow.length; x++) {\n      if (board[i][x] === board[i][x + 1]) {\n        const sum = board[i][x] + board[i][x + 1];\n\n        gameScore.innerText = +gameScore.innerText + sum;\n        board[i][x] = sum;\n        board[i][x + 1] = 0;\n      }\n    }\n  }\n  winer();\n}\n\nfunction reverseRow() {\n  board.forEach(el => el.reverse());\n}\n\nfunction expandArray() {\n  for (let x = 0; x < tableRow.length; x++) {\n    for (let y = x; y < tableRow.length; y++) {\n      [board[x][y], board[y][x]] = [board[y][x], board[x][y]];\n    }\n  };\n}\n\nfunction winer() {\n  const result = board.some(el => el.includes(2048));\n\n  if (result) {\n    messageWiner.classList.remove('hidden');\n\n    return true;\n  };\n}\n\nfunction checkZerosAndCanMove() {\n  const result = board.some(el => el.includes(0));\n\n  if (!result && !findSameNumbers()) {\n    messageLose.classList.remove('hidden');\n\n    return true;\n  }\n}\n\nfunction findSameNumbers() {\n  for (let i = 1; i < 4; i++) {\n    for (let x = 0; x < 4; x++) {\n      if (board[i][x] === board[i - 1][x] || board[x][i] === board[x][i - 1]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction wasMoving(matrix) {\n  const clone = createField();\n\n  for (let i = 0; i < 4; i++) {\n    for (let x = 0; x < 4; x++) {\n      clone[i][x] = matrix[i][x];\n    }\n  }\n\n  return clone;\n}\n\nfunction checkBoard(originalArr, modifyArr) {\n  for (let x = 0; x < board.length; x++) {\n    for (let y = 0; y < board.length; y++) {\n      if (originalArr[x][y] !== modifyArr[x][y]) {\n        createRandomNumber();\n\n        return;\n      }\n    }\n  }\n}\n"]}